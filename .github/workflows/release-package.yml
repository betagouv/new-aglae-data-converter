name: Release Nuitka Package
on:
  push

jobs:
  # Install project for both Windows and Linux
  install:
    strategy:
      matrix:
        #os: [ubuntu-latest, windows-latest]
        os: [windows-latest]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Download HDF5 Installer
        run: powershell -c "Invoke-WebRequest -OutFile hdf5-installer.zip -Uri https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.7/bin/windows/hdf5-1.10.7-Std-win10_64-vs16.zip"
        
      - name: Unzip HDF5 Installer
        run: 7z x hdf5-installer.zip -o.\HDF5
        
      - name: Install HDF5
        run: powershell -c "msiexec.exe /i .\HDF5\HDF5-1.10.7-win64.msi /passive"

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction
      
      - name: Build rust
        run: make build_rs
      
      - name: Build CLI with Nuitka
        run: ls -la && make build_cli
      
      - name: Build GUI with Nuitka
        run: make build_gui

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            *.bin
